{"ast":null,"code":"var _jsxFileName = \"/Users/admin/audio-visual/audio-visualizer/src/components/circle.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst CircleWrap = styled('canvas')`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n`;\nconst Circle = styled('div')`\n    width: 200px;\n    height: 200px;\n    border-radius: 50%;\n    border: 1px solid black;\n    background: white;\n`;\nconst Bar = styled('div')`\n    height: 100px;\n    width: 0px;\n    border: 1px solid black;\n`;\nlet c = document.getElementById(\"my-canvas\"); // let ctx = c.getContext(\"2d\");\n\nconst drawCircle = () => {\n  ctx.beginPath();\n  ctx.arc(100, 100, 100, 0, 2 * Math.PI);\n  ctx.stroke();\n};\n\nconst drawBars = (angle, distance, label) => {\n  var x = 100 + 100 * Math.cos(-angle * Math.PI / 180) * distance;\n  var y = 100 + 100 * Math.sin(-angle * Math.PI / 180) * distance;\n  ctx.beginPath();\n  ctx.arc(x, y, 4, 0, 2 * Math.PI);\n  ctx.fill();\n  ctx.font = \"10px\";\n  ctx.fillText(label, x + 10, y);\n};\n\nconst CircleContainer = () => {\n  console.log(document);\n  return /*#__PURE__*/React.createElement(CircleWrap, {\n    id: \"my-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, drawCircle());\n};\n\nexport default CircleContainer;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/circle.js"],"names":["React","styled","CircleWrap","Circle","Bar","c","document","getElementById","drawCircle","ctx","beginPath","arc","Math","PI","stroke","drawBars","angle","distance","label","x","cos","y","sin","fill","font","fillText","CircleContainer","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAAC,QAAD,CAAW;;;;;CAApC;AAOA,MAAME,MAAM,GAAGF,MAAM,CAAC,KAAD,CAAQ;;;;;;CAA7B;AAQA,MAAMG,GAAG,GAAGH,MAAM,CAAC,KAAD,CAAQ;;;;CAA1B;AAMA,IAAII,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAR,C,CACA;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrBC,EAAAA,GAAG,CAACC,SAAJ;AACAD,EAAAA,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAa,GAAb,EAAkB,GAAlB,EAAuB,CAAvB,EAA0B,IAAIC,IAAI,CAACC,EAAnC;AACAJ,EAAAA,GAAG,CAACK,MAAJ;AACH,CAJD;;AAMA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAOC,QAAP,EAAgBC,KAAhB,KAA0B;AACvC,MAAIC,CAAC,GAAG,MAAM,MAAMP,IAAI,CAACQ,GAAL,CAAS,CAACJ,KAAD,GAAOJ,IAAI,CAACC,EAAZ,GAAe,GAAxB,CAAN,GAAqCI,QAAnD;AACA,MAAII,CAAC,GAAG,MAAM,MAAMT,IAAI,CAACU,GAAL,CAAS,CAACN,KAAD,GAAOJ,IAAI,CAACC,EAAZ,GAAe,GAAxB,CAAN,GAAqCI,QAAnD;AAEAR,EAAAA,GAAG,CAACC,SAAJ;AACAD,EAAAA,GAAG,CAACE,GAAJ,CAAQQ,CAAR,EAAWE,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,IAAIT,IAAI,CAACC,EAA7B;AACAJ,EAAAA,GAAG,CAACc,IAAJ;AAEAd,EAAAA,GAAG,CAACe,IAAJ,GAAW,MAAX;AACAf,EAAAA,GAAG,CAACgB,QAAJ,CAAaP,KAAb,EAAmBC,CAAC,GAAG,EAAvB,EAA0BE,CAA1B;AACH,CAVD;;AAYA,MAAMK,eAAe,GAAG,MAAM;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACA,sBACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKE,UAAU,EAHf,CADJ;AAOH,CATD;;AAWA,eAAekB,eAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst CircleWrap = styled('canvas')`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n`;\n\nconst Circle = styled('div')`\n    width: 200px;\n    height: 200px;\n    border-radius: 50%;\n    border: 1px solid black;\n    background: white;\n`;\n\nconst Bar = styled('div')`\n    height: 100px;\n    width: 0px;\n    border: 1px solid black;\n`;\n\nlet c = document.getElementById(\"my-canvas\")\n// let ctx = c.getContext(\"2d\");\n\nconst drawCircle = () => {\n    ctx.beginPath();\n    ctx.arc(100, 100, 100, 0, 2 * Math.PI);\n    ctx.stroke();\n}\n\nconst drawBars = (angle,distance,label) => {\n    var x = 100 + 100 * Math.cos(-angle*Math.PI/180) * distance;\n    var y = 100 + 100 * Math.sin(-angle*Math.PI/180) * distance;\n\n    ctx.beginPath();\n    ctx.arc(x, y, 4, 0, 2 * Math.PI);\n    ctx.fill();\n\n    ctx.font = \"10px\";\n    ctx.fillText(label,x + 10,y);\n}\n\nconst CircleContainer = () => {\n    console.log(document)\n    return (\n        <CircleWrap id=\"my-canvas\">\n            {/* <Circle />\n            <Bar /> */}\n            {drawCircle()}\n        </CircleWrap>\n    )\n}\n\nexport default CircleContainer;"]},"metadata":{},"sourceType":"module"}