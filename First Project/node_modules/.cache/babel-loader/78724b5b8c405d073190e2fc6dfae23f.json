{"ast":null,"code":"var _jsxFileName = \"/Users/admin/audio-visual/audio-visualizer/src/components/audiobars.js\";\nimport React from 'react';\nimport VisualDemo from './VisualDemo';\nimport soundFile from '../audio/GummyBearz.mp3';\n\nclass AudioDataContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.initializeAudioAnalyser = () => {\n      const audioFile = new Audio();\n      const audioContext = new AudioContext();\n      const source = audioContext.createMediaElementSource(audioFile);\n      const analyser = audioContext.createAnalyser();\n      audioFile.src = soundFile;\n      analyser.fftSize = 64;\n      source.connect(audioContext.destination);\n      source.connect(analyser);\n      audioFile.play();\n      this.setState({\n        audioData: analyser\n      });\n    };\n\n    this.getFrequencyData = styleAdjuster => {\n      const bufferLength = this.state.audioData.frequencyBinCount;\n      const amplitudeArray = new Uint8Array(bufferLength);\n      this.state.audioData.getByteFrequencyData(amplitudeArray);\n      styleAdjuster(amplitudeArray);\n    };\n\n    this.state = {};\n    this.frequencyBandArray = [...Array(25).keys()];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(VisualDemo, {\n      initializeAudioAnalyser: this.initializeAudioAnalyser,\n      frequencyBandArray: this.frequencyBandArray,\n      getFrequencyData: this.getFrequencyData,\n      audioData: this.state.audioData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default AudioDataContainer;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/audiobars.js"],"names":["React","VisualDemo","soundFile","AudioDataContainer","Component","constructor","props","initializeAudioAnalyser","audioFile","Audio","audioContext","AudioContext","source","createMediaElementSource","analyser","createAnalyser","src","fftSize","connect","destination","play","setState","audioData","getFrequencyData","styleAdjuster","bufferLength","state","frequencyBinCount","amplitudeArray","Uint8Array","getByteFrequencyData","frequencyBandArray","Array","keys","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,kBAAN,SAAiCH,KAAK,CAACI,SAAvC,CAAiD;AAE/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBC,uBANmB,GAMO,MAAM;AAC9B,YAAMC,SAAS,GAAG,IAAIC,KAAJ,EAAlB;AACA,YAAMC,YAAY,GAAG,IAAIC,YAAJ,EAArB;AACA,YAAMC,MAAM,GAAGF,YAAY,CAACG,wBAAb,CAAsCL,SAAtC,CAAf;AACA,YAAMM,QAAQ,GAAGJ,YAAY,CAACK,cAAb,EAAjB;AACAP,MAAAA,SAAS,CAACQ,GAAV,GAAgBd,SAAhB;AACAY,MAAAA,QAAQ,CAACG,OAAT,GAAmB,EAAnB;AACAL,MAAAA,MAAM,CAACM,OAAP,CAAeR,YAAY,CAACS,WAA5B;AACAP,MAAAA,MAAM,CAACM,OAAP,CAAeJ,QAAf;AACAN,MAAAA,SAAS,CAACY,IAAV;AACE,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAER;AADC,OAAd;AAGH,KAnBkB;;AAAA,SAqBnBS,gBArBmB,GAqBCC,aAAD,IAAmB;AACpC,YAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWJ,SAAX,CAAqBK,iBAA1C;AACA,YAAMC,cAAc,GAAG,IAAIC,UAAJ,CAAeJ,YAAf,CAAvB;AACA,WAAKC,KAAL,CAAWJ,SAAX,CAAqBQ,oBAArB,CAA0CF,cAA1C;AACAJ,MAAAA,aAAa,CAACI,cAAD,CAAb;AACD,KA1BkB;;AAEjB,SAAKF,KAAL,GAAa,EAAb;AACA,SAAKK,kBAAL,GAA0B,CAAC,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAJ,CAA1B;AACD;;AAwBDC,EAAAA,MAAM,GAAE;AAEN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,uBAAuB,EAAE,KAAK3B,uBADhC;AAEE,MAAA,kBAAkB,EAAE,KAAKwB,kBAF3B;AAGE,MAAA,gBAAgB,EAAE,KAAKR,gBAHzB;AAIE,MAAA,SAAS,EAAE,KAAKG,KAAL,CAAWJ,SAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;;AA1C8C;;AA6CjD,eAAenB,kBAAf","sourcesContent":["import React from 'react';\nimport VisualDemo from './VisualDemo';\nimport soundFile from '../audio/GummyBearz.mp3'\n\nclass AudioDataContainer extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.frequencyBandArray = [...Array(25).keys()]\n  }\n\n  initializeAudioAnalyser = () => {\n    const audioFile = new Audio();\n    const audioContext = new AudioContext();\n    const source = audioContext.createMediaElementSource(audioFile);\n    const analyser = audioContext.createAnalyser();\n    audioFile.src = soundFile;\n    analyser.fftSize = 64\n    source.connect(audioContext.destination);\n    source.connect(analyser);\n    audioFile.play()\n      this.setState({\n        audioData: analyser\n      })\n  }\n\n  getFrequencyData = (styleAdjuster) => {\n    const bufferLength = this.state.audioData.frequencyBinCount;\n    const amplitudeArray = new Uint8Array(bufferLength);\n    this.state.audioData.getByteFrequencyData(amplitudeArray)\n    styleAdjuster(amplitudeArray)\n  }\n\n  render(){\n\n    return (\n      <div>\n        <VisualDemo\n          initializeAudioAnalyser={this.initializeAudioAnalyser}\n          frequencyBandArray={this.frequencyBandArray}\n          getFrequencyData={this.getFrequencyData}\n          audioData={this.state.audioData}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AudioDataContainer;"]},"metadata":{},"sourceType":"module"}