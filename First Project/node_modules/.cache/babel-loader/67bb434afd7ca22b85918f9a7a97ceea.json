{"ast":null,"code":"const Canvas = ({ ...props\n}) => {\n  // React.createElement()\n  // let canvas = document.querySelector(\"#canvas\");\n  // let canvas = React.createElement('canvas', {});\n  console.log(props.canvas);\n  requestAnimationFrame(Canvas); // canvas.width = window.innerWidth;\n  // canvas.height = window.innerHeight;\n\n  props.analyser.getByteFrequencyData(props.dataArray);\n  let ctx = props.canvas.getContext('2d'); // let width = canvas.width;\n  // let height = canvas.height;\n\n  let barWidth = 750 / props.bufferLength * 2.5;\n  let barHeight;\n  let x = 0; // ctx.fillStyle = \"#000\";\n\n  ctx.fillRect(0, 0, 750, 200);\n  x = 0;\n\n  for (let i = 0; i < props.bufferLength; i++) {\n    barHeight = props.dataArray[i];\n    let r = barHeight + 25 * (i / props.bufferLength);\n    let g = 250 * (i / props.bufferLength);\n    let b = 50;\n    ctx.fillStyle = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    ctx.fillRect(x, 200 - barHeight, barWidth, barHeight);\n    x += barWidth + 1;\n  }\n};\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/canvas.js"],"names":["Canvas","props","console","log","canvas","requestAnimationFrame","analyser","getByteFrequencyData","dataArray","ctx","getContext","barWidth","bufferLength","barHeight","x","fillRect","i","r","g","b","fillStyle"],"mappings":"AAAA,MAAMA,MAAM,GAAG,CAAC,EAAC,GAAGC;AAAJ,CAAD,KAAgB;AAEvB;AACA;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACAC,EAAAA,qBAAqB,CAACL,MAAD,CAArB,CAPuB,CAQvB;AACA;;AACAC,EAAAA,KAAK,CAACK,QAAN,CAAeC,oBAAf,CAAoCN,KAAK,CAACO,SAA1C;AAEA,MAAIC,GAAG,GAAGR,KAAK,CAACG,MAAN,CAAaM,UAAb,CAAwB,IAAxB,CAAV,CAZuB,CAavB;AACA;;AAEA,MAAIC,QAAQ,GAAI,MAAMV,KAAK,CAACW,YAAb,GAA6B,GAA5C;AACA,MAAIC,SAAJ;AACA,MAAIC,CAAC,GAAG,CAAR,CAlBuB,CAmBvB;;AACAL,EAAAA,GAAG,CAACM,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,GAAnB,EAAwB,GAAxB;AACAD,EAAAA,CAAC,GAAC,CAAF;;AACA,OAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGf,KAAK,CAACW,YAAvB,EAAqCI,CAAC,EAAtC,EAAyC;AACvCH,IAAAA,SAAS,GAAGZ,KAAK,CAACO,SAAN,CAAgBQ,CAAhB,CAAZ;AACA,QAAIC,CAAC,GAAGJ,SAAS,GAAI,MAAMG,CAAC,GAACf,KAAK,CAACW,YAAd,CAArB;AACA,QAAIM,CAAC,GAAG,OAAOF,CAAC,GAACf,KAAK,CAACW,YAAf,CAAR;AACA,QAAIO,CAAC,GAAG,EAAR;AACAV,IAAAA,GAAG,CAACW,SAAJ,GAAgB,SAASH,CAAT,GAAa,GAAb,GAAmBC,CAAnB,GAAuB,GAAvB,GAA6BC,CAA7B,GAAgC,GAAhD;AACAV,IAAAA,GAAG,CAACM,QAAJ,CAAaD,CAAb,EAAgB,MAAMD,SAAtB,EAAiCF,QAAjC,EAA2CE,SAA3C;AACAC,IAAAA,CAAC,IAAIH,QAAQ,GAAG,CAAhB;AACD;AACR,CA/BD;;AAiCA,eAAeX,MAAf","sourcesContent":["const Canvas = ({...props}) => {\n   \n        // React.createElement()\n        // let canvas = document.querySelector(\"#canvas\");\n        // let canvas = React.createElement('canvas', {});\n\n        console.log(props.canvas);\n        requestAnimationFrame(Canvas);\n        // canvas.width = window.innerWidth;\n        // canvas.height = window.innerHeight;\n        props.analyser.getByteFrequencyData(props.dataArray);\n        \n        let ctx = props.canvas.getContext('2d');\n        // let width = canvas.width;\n        // let height = canvas.height;\n        \n        let barWidth = (750 / props.bufferLength) * 2.5;\n        let barHeight;\n        let x = 0;\n        // ctx.fillStyle = \"#000\";\n        ctx.fillRect(0, 0, 750, 200);\n        x=0;\n        for(let i=0; i < props.bufferLength; i++){\n          barHeight = props.dataArray[i];\n          let r = barHeight + (25 * (i/props.bufferLength));\n          let g = 250 * (i/props.bufferLength);\n          let b = 50;\n          ctx.fillStyle = \"rgb(\" + r + \",\" + g + \",\" + b +\")\";\n          ctx.fillRect(x, 200 - barHeight, barWidth, barHeight);\n          x += barWidth + 1;\n        }\n}\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}