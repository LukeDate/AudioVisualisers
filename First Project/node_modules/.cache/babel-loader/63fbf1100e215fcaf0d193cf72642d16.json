{"ast":null,"code":"var _jsxFileName = \"/Users/admin/audio-visual/audio-visualizer/src/components/audiobars.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport VisualDemo from './visualdemo';\nimport soundFile from '../music/it_comes_from_china.ogg';\n\nconst AudioDataContainer = () => {\n  let context = new AudioContext(); // let source = context.createMediaElementSource(soundFile);\n  // let analyser = context.createAnalyser();\n  // source.connect(analyser);\n  // analyser.connect(context.destination);\n  // analyser.fftSize = 256;\n  // let bufferLength = analyser.frequencyBinCount;\n  // let dataArray = new Uint8Array(bufferLength);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, console.log(context), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => source.play(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Play Audio\"));\n};\n\nexport default AudioDataContainer;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/audiobars.js"],"names":["React","useState","useEffect","useRef","VisualDemo","soundFile","AudioDataContainer","context","AudioContext","console","log","source","play"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC7B,MAAIC,OAAO,GAAG,IAAIC,YAAJ,EAAd,CAD6B,CAE7B;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,sBACI,0CACCC,OAAO,CAACC,GAAR,CAAYH,OAAZ,CADD,eAEA;AAAQ,IAAA,OAAO,EAAE,MAAMI,MAAM,CAACC,IAAP,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,CADJ;AAOH,CAlBD;;AAmBA,eAAeN,kBAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport VisualDemo from './visualdemo';\nimport soundFile from '../music/it_comes_from_china.ogg';\n\nconst AudioDataContainer = () => {\n    let context = new AudioContext();\n    // let source = context.createMediaElementSource(soundFile);\n    // let analyser = context.createAnalyser();\n    // source.connect(analyser);\n    // analyser.connect(context.destination);\n    // analyser.fftSize = 256;\n\n    // let bufferLength = analyser.frequencyBinCount;\n    // let dataArray = new Uint8Array(bufferLength);\n\n    return(\n        <>\n        {console.log(context)}\n        <button onClick={() => source.play()}>Play Audio</button>\n        {/* <VisualDemo  analyser={analyser} dataArray={dataArray} bufferLength={bufferLength} /> */}\n        </>\n    )\n}\nexport default AudioDataContainer;"]},"metadata":{},"sourceType":"module"}