{"ast":null,"code":"var _jsxFileName = \"/Users/admin/audio-visual/audio-visualizer/src/components/audiobars.js\";\nimport React, { useState, useEffect } from 'react';\nimport VisualDemo from './visualdemo';\nimport soundFile from '../music/it_comes_from_china.ogg';\n\nconst AudioDataContainer = () => {\n  let frequencyBandArray = [...Array(25).keys()];\n  const [audioData, setAudioData] = useState([]);\n  const [songFile, setSongFile] = useState();\n  useEffect(() => {\n    const audioFile = new Audio();\n    setSongFile(audioFile);\n    const audioContext = new AudioContext();\n    const source = audioContext.createMediaElementSource(audioFile);\n    const analyser = audioContext.createAnalyser();\n    audioFile.src = soundFile;\n    analyser.fftSize = 64;\n    source.connect(audioContext.destination);\n    source.connect(analyser);\n    setAudioData(analyser);\n  });\n\n  let initializeAudioAnalyser = () => {};\n\n  const getFrequencyData = styleAdjuster => {\n    console.log(audioData);\n    const bufferLength = audioData && audioData.frequencyBinCount;\n    const amplitudeArray = new Uint8Array(bufferLength);\n    audioData && audioData.getByteFrequencyData(amplitudeArray);\n    styleAdjuster(amplitudeArray);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, console.log(audioData), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => songFile.play(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"PLAY DA SONG\"));\n};\n\nexport default AudioDataContainer;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/audiobars.js"],"names":["React","useState","useEffect","VisualDemo","soundFile","AudioDataContainer","frequencyBandArray","Array","keys","audioData","setAudioData","songFile","setSongFile","audioFile","Audio","audioContext","AudioContext","source","createMediaElementSource","analyser","createAnalyser","src","fftSize","connect","destination","initializeAudioAnalyser","getFrequencyData","styleAdjuster","console","log","bufferLength","frequencyBinCount","amplitudeArray","Uint8Array","getByteFrequencyData","play"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAE7B,MAAIC,kBAAkB,GAAG,CAAC,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAJ,CAAzB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,SAAS,GAAG,IAAIC,KAAJ,EAAlB;AACAF,IAAAA,WAAW,CAACC,SAAD,CAAX;AACA,UAAME,YAAY,GAAG,IAAIC,YAAJ,EAArB;AACA,UAAMC,MAAM,GAAGF,YAAY,CAACG,wBAAb,CAAsCL,SAAtC,CAAf;AACA,UAAMM,QAAQ,GAAGJ,YAAY,CAACK,cAAb,EAAjB;AACAP,IAAAA,SAAS,CAACQ,GAAV,GAAgBjB,SAAhB;AACAe,IAAAA,QAAQ,CAACG,OAAT,GAAmB,EAAnB;AACAL,IAAAA,MAAM,CAACM,OAAP,CAAeR,YAAY,CAACS,WAA5B;AACAP,IAAAA,MAAM,CAACM,OAAP,CAAeJ,QAAf;AACAT,IAAAA,YAAY,CAACS,QAAD,CAAZ;AAEH,GAZQ,CAAT;;AAcA,MAAIM,uBAAuB,GAAG,MAAM,CACnC,CADD;;AAMA,QAAMC,gBAAgB,GAAIC,aAAD,IAAmB;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYpB,SAAZ;AACA,UAAMqB,YAAY,GAAGrB,SAAS,IAAIA,SAAS,CAACsB,iBAA5C;AACA,UAAMC,cAAc,GAAG,IAAIC,UAAJ,CAAeH,YAAf,CAAvB;AACArB,IAAAA,SAAS,IAAIA,SAAS,CAACyB,oBAAV,CAA+BF,cAA/B,CAAb;AACAL,IAAAA,aAAa,CAACK,cAAD,CAAb;AACH,GAND;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,OAAO,CAACC,GAAR,CAAYpB,SAAZ,CADL,eAEJ;AAAQ,IAAA,OAAO,EAAE,MAAME,QAAQ,CAACwB,IAAT,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFI,CADJ;AAOH,CAxCD;;AA0CA,eAAe9B,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport VisualDemo from './visualdemo';\nimport soundFile from '../music/it_comes_from_china.ogg';\n\nconst AudioDataContainer = () => {\n\n    let frequencyBandArray = [...Array(25).keys()];\n    const [audioData, setAudioData] = useState([]);\n    const [songFile, setSongFile] = useState();\n\n    useEffect(() => {\n        const audioFile = new Audio();\n        setSongFile(audioFile);\n        const audioContext = new AudioContext();\n        const source = audioContext.createMediaElementSource(audioFile);\n        const analyser = audioContext.createAnalyser();\n        audioFile.src = soundFile;\n        analyser.fftSize = 64;\n        source.connect(audioContext.destination);\n        source.connect(analyser);\n        setAudioData(analyser);\n\n    });\n\n    let initializeAudioAnalyser = () => {\n    }\n    \n    \n\n\n    const getFrequencyData = (styleAdjuster) => {\n        console.log(audioData);\n        const bufferLength = audioData && audioData.frequencyBinCount;\n        const amplitudeArray = new Uint8Array(bufferLength);\n        audioData && audioData.getByteFrequencyData(amplitudeArray);\n        styleAdjuster(amplitudeArray);\n    }\n    return (\n        <div>\n            {console.log(audioData)}\n    <button onClick={() => songFile.play()}>PLAY DA SONG</button>\n            {/* Audio data: {audioData} */}\n        </div>\n    );\n}\n\nexport default AudioDataContainer;"]},"metadata":{},"sourceType":"module"}