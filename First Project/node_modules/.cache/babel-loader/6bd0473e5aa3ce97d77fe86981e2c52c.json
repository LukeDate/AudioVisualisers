{"ast":null,"code":"var _jsxFileName = \"/Users/admin/audio-visual/audio-visualizer/src/components/circle.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nconst CircleWrap = styled('div')`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n`;\nconst Circle = styled('div')`\n    width: 200px;\n    height: 200px;\n    border-radius: 50%;\n    border: 1px solid black;\n    background: white;\n    `;\nconst Bar = styled('div')`\n    height: 100px;\n    width: 0px;\n    border: 1px solid black;\n    `; // let ctx = c.getContext(\"2d\");\n// const drawCircle = () => {\n//     ctx.beginPath();\n//     ctx.arc(100, 100, 100, 0, 2 * Math.PI);\n//     ctx.stroke();\n// }\n// const drawBars = (angle,distance,label) => {\n//     var x = 100 + 100 * Math.cos(-angle*Math.PI/180) * distance;\n//     var y = 100 + 100 * Math.sin(-angle*Math.PI/180) * distance;\n//     ctx.beginPath();\n//     ctx.arc(x, y, 4, 0, 2 * Math.PI);\n//     ctx.fill();\n//     ctx.font = \"10px\";\n//     ctx.fillText(label,x + 10,y);\n// }\n\nconst CircleContainer = () => {\n  let ref = useRef('my-canvas');\n  console.log(ref);\n  return /*#__PURE__*/React.createElement(CircleWrap, {\n    id: \"my-canvas\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default CircleContainer;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/circle.js"],"names":["React","useEffect","useState","useRef","styled","CircleWrap","Circle","Bar","CircleContainer","ref","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAAC,KAAD,CAAQ;;;;;CAAjC;AAOA,MAAME,MAAM,GAAGF,MAAM,CAAC,KAAD,CAAQ;;;;;;KAA7B;AAQI,MAAMG,GAAG,GAAGH,MAAM,CAAC,KAAD,CAAQ;;;;KAA1B,C,CAOJ;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMI,eAAe,GAAG,MAAM;AAC1B,MAAIC,GAAG,GAAGN,MAAM,CAAC,WAAD,CAAhB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEA,sBACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEA,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH,CAXD;;AAaA,eAAeD,eAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst CircleWrap = styled('div')`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n`;\n\nconst Circle = styled('div')`\n    width: 200px;\n    height: 200px;\n    border-radius: 50%;\n    border: 1px solid black;\n    background: white;\n    `;\n    \n    const Bar = styled('div')`\n    height: 100px;\n    width: 0px;\n    border: 1px solid black;\n    `;\n    \n\n// let ctx = c.getContext(\"2d\");\n\n// const drawCircle = () => {\n//     ctx.beginPath();\n//     ctx.arc(100, 100, 100, 0, 2 * Math.PI);\n//     ctx.stroke();\n// }\n\n// const drawBars = (angle,distance,label) => {\n//     var x = 100 + 100 * Math.cos(-angle*Math.PI/180) * distance;\n//     var y = 100 + 100 * Math.sin(-angle*Math.PI/180) * distance;\n\n//     ctx.beginPath();\n//     ctx.arc(x, y, 4, 0, 2 * Math.PI);\n//     ctx.fill();\n\n//     ctx.font = \"10px\";\n//     ctx.fillText(label,x + 10,y);\n// }\n\nconst CircleContainer = () => {\n    let ref = useRef('my-canvas');\n    console.log(ref);\n    \n    return (\n        <CircleWrap id=\"my-canvas\" ref={ref}>\n            {/* <Circle />\n            <Bar /> */}\n            {/* {drawCircle()} */}\n        </CircleWrap>\n    )\n}\n\nexport default CircleContainer;"]},"metadata":{},"sourceType":"module"}