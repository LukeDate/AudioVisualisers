{"ast":null,"code":"var _jsxFileName = \"/Users/admin/audio-visual/audio-visualizer/src/components/visualdemo.js\";\nimport React, { useRef, useEffect, useState } from 'react'; // import Paper from '@material-ui/core/Paper';\n// import IconButton from '@material-ui/core/IconButton';\n// import Tooltip from '@material-ui/core/Tooltip';\n// import EqualizerIcon from '@material-ui/icons/Equalizer';\n// import { makeStyles } from '@material-ui/core/styles';\n\nimport '../App.css';\n\nconst VisualDemo = ({ ...props\n}) => {\n  console.log(document.querySelector(\"#canvas\"));\n  let Ref = useRef();\n  const [divHeight, setHeight] = useState(0);\n  let canvas = document.querySelector(\"#canvas\");\n\n  function renderFrame() {\n    // props.analyser.getByteFrequencyData(props.dataArray);\n    // console.log(canvas);\n    // canvas.width = window.innerWidth;\n    // canvas.height = window.innerHeight;\n    let ctx = canvas && canvas.getContext('2d'); // let width = canvas.width;\n    // let height = canvas.height;\n\n    let barWidth = 2 / props.bufferLength;\n    let barHeight;\n    let x = 0;\n    requestAnimationFrame(renderFrame);\n    x = 0;\n\n    for (let i = 0; i < props.bufferLength; i++) {\n      barHeight = props.dataArray[i];\n      let r = barHeight + 25 * (i / props.bufferLength);\n      let g = 250 * (i / props.bufferLength);\n      let b = 50;\n      ctx.fillStyle = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n      ctx.fillRect(x, 200 - barHeight, barWidth, barHeight);\n      x += barWidth + 1;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: Ref,\n    height: 200,\n    width: 750,\n    id: \"canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, renderFrame());\n};\n\nexport default VisualDemo;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/visualdemo.js"],"names":["React","useRef","useEffect","useState","VisualDemo","props","console","log","document","querySelector","Ref","divHeight","setHeight","canvas","renderFrame","ctx","getContext","barWidth","bufferLength","barHeight","x","requestAnimationFrame","i","dataArray","r","g","b","fillStyle","fillRect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAoD,OAApD,C,CACA;AACA;AACA;AACA;AACA;;AACA,OAAO,YAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC,EAAC,GAAGC;AAAJ,CAAD,KAAgB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAZ;AACA,MAAIC,GAAG,GAAGT,MAAM,EAAhB;AACA,QAAM,CAACU,SAAD,EAAYC,SAAZ,IAAyBT,QAAQ,CAAC,CAAD,CAAvC;AAEA,MAAIU,MAAM,GAAGL,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAb;;AACA,WAASK,WAAT,GAAuB;AACrB;AACA;AACA;AACA;AACA,QAAIC,GAAG,GAAGF,MAAM,IAAIA,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAApB,CALqB,CAOrB;AACA;;AAEA,QAAIC,QAAQ,GAAI,IAAIZ,KAAK,CAACa,YAA1B;AACA,QAAIC,SAAJ;AACA,QAAIC,CAAC,GAAG,CAAR;AACAC,IAAAA,qBAAqB,CAACP,WAAD,CAArB;AACAM,IAAAA,CAAC,GAAC,CAAF;;AACA,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGjB,KAAK,CAACa,YAAvB,EAAqCI,CAAC,EAAtC,EAAyC;AACvCH,MAAAA,SAAS,GAAGd,KAAK,CAACkB,SAAN,CAAgBD,CAAhB,CAAZ;AAGA,UAAIE,CAAC,GAAGL,SAAS,GAAI,MAAMG,CAAC,GAACjB,KAAK,CAACa,YAAd,CAArB;AACA,UAAIO,CAAC,GAAG,OAAOH,CAAC,GAACjB,KAAK,CAACa,YAAf,CAAR;AACA,UAAIQ,CAAC,GAAG,EAAR;AACAX,MAAAA,GAAG,CAACY,SAAJ,GAAgB,SAASH,CAAT,GAAa,GAAb,GAAmBC,CAAnB,GAAuB,GAAvB,GAA6BC,CAA7B,GAAgC,GAAhD;AACAX,MAAAA,GAAG,CAACa,QAAJ,CAAaR,CAAb,EAAgB,MAAMD,SAAtB,EAAiCF,QAAjC,EAA2CE,SAA3C;AACAC,MAAAA,CAAC,IAAIH,QAAQ,GAAG,CAAhB;AACD;AACF;;AACD,sBACE;AAAQ,IAAA,GAAG,EAAEP,GAAb;AAAkB,IAAA,MAAM,EAAE,GAA1B;AAA+B,IAAA,KAAK,EAAE,GAAtC;AAA2C,IAAA,EAAE,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGI,WAAW,EAFd,CADF;AAMD,CAvCD;;AAyCA,eAAeV,UAAf","sourcesContent":["import React, { useRef, useEffect, useState }  from 'react';\n// import Paper from '@material-ui/core/Paper';\n// import IconButton from '@material-ui/core/IconButton';\n// import Tooltip from '@material-ui/core/Tooltip';\n// import EqualizerIcon from '@material-ui/icons/Equalizer';\n// import { makeStyles } from '@material-ui/core/styles';\nimport '../App.css';\n\nconst VisualDemo = ({...props}) => {\n  console.log(document.querySelector(\"#canvas\"));\n  let Ref = useRef()\n  const [divHeight, setHeight] = useState(0);\n  \n  let canvas = document.querySelector(\"#canvas\");\n  function renderFrame() {\n    // props.analyser.getByteFrequencyData(props.dataArray);\n    // console.log(canvas);\n    // canvas.width = window.innerWidth;\n    // canvas.height = window.innerHeight;\n    let ctx = canvas && canvas.getContext('2d');\n    \n    // let width = canvas.width;\n    // let height = canvas.height;\n    \n    let barWidth = (2 / props.bufferLength);\n    let barHeight;\n    let x = 0;\n    requestAnimationFrame(renderFrame);\n    x=0;\n    for(let i=0; i < props.bufferLength; i++){\n      barHeight = props.dataArray[i];\n\n\n      let r = barHeight + (25 * (i/props.bufferLength));\n      let g = 250 * (i/props.bufferLength);\n      let b = 50;\n      ctx.fillStyle = \"rgb(\" + r + \",\" + g + \",\" + b +\")\";\n      ctx.fillRect(x, 200 - barHeight, barWidth, barHeight);\n      x += barWidth + 1;\n    }\n  }  \n  return (\n    <canvas ref={Ref} height={200} width={750} id=\"canvas\">\n      {/* {props.isPlaying && renderFrame(Ref)} */}\n      {renderFrame()}\n    </canvas>\n  )\n}\n\nexport default VisualDemo;"]},"metadata":{},"sourceType":"module"}