{"ast":null,"code":"var _jsxFileName = \"/Users/admin/audio-visual/audio-visualizer/src/components/circle.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nconst Wrapper = styled('div')`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n`;\nconst CircleCanvas = styled('canvas')`\n    margin: 0 auto;\n    // height: 100%;\n`;\n\nconst CircleContainer = () => {\n  let ref = useRef();\n  const [ctx, setCtx] = useState();\n  useEffect(() => {\n    let getCtx = ref.current;\n    console.log('HELLO', getCtx);\n    setCtx(getCtx); // initPage();\n  }); //     let radius = 150;\n  //     let center_x = ref.current.getContext(\"2d\").width / 2;\n  //     let center_y = ctx.height / 2;\n  //     const animationLooper = (analyser, freqArr) => {\n  //             let bars = 200;\n  //             // ctx.imageSmoothingEnabled = false;\n  //             console.log('HELLO', ctx && ctx);\n  //             ctx && ctx.beginPath();\n  //             ctx && ctx.arc(center_x,center_y,radius,0,2*Math.PI);\n  //             ctx && ctx.stroke();\n  //             analyser.getByteFrequencyData(freqArr);\n  //             for(let i=0; i < bars; i++) {\n  //                 let rads = Math.PI * 2 / bars;\n  //                 let bar_height = 100;\n  //                 let bar_width = 2;\n  //                 let x = center_x + Math.cos(rads * i) * (radius);\n  //                 let y = center_y + Math.sin(rads * i) * (radius);\n  //                 let x_end = center_x + Math.cos(rads * i)*(radius + bar_height);\n  //                 let y_end = center_y + Math.sin(rads * i)*(radius + bar_height);\n  //                 drawBar(x, y, x_end, y_end, bar_width, freqArr[i], ctx && ctx);\n  //             }\n  //             window.requestAnimationFrame(animationLooper);\n  //     }\n  //     const drawBar = (x1, y1, x2, y2, width,frequency, ctx) => {\n  //         console.log(ctx);\n  //         let lineColor = \"rgb(\" + frequency + \", \" + frequency + \", \" + 205 + \")\";\n  //         ctx.strokeStyle = lineColor;\n  //         ctx.lineWidth = width;\n  //         ctx.beginPath();\n  //         ctx.moveTo(x1,y1);\n  //         ctx.lineTo(x2,y2);\n  //         ctx.stroke();\n  //     }\n  //     const initPage = () => {\n  //         let audio = new Audio();\n  //         let context = new (window.AudioContext || window.webkitAudioContext)();\n  //         let analyser = context.createAnalyser();\n  //         let freqArr = new Uint8Array(analyser.frequencyBitCount);\n  //         audio.src = \"/it_came_from_china.mp3\";\n  //         let source = context.createMediaElementSource(audio);\n  //         source.connect(analyser);\n  //         analyser.connect(context.destination);\n  //         audio.play();\n  //         animationLooper(analyser, freqArr);\n  // }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircleCanvas, {\n    width: \"600\",\n    height: \"600\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CircleContainer;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/circle.js"],"names":["React","useEffect","useState","useRef","styled","Wrapper","CircleCanvas","CircleContainer","ref","ctx","setCtx","getCtx","current","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAAC,KAAD,CAAQ;;;;;CAA9B;AAOA,MAAME,YAAY,GAAGF,MAAM,CAAC,QAAD,CAAW;;;CAAtC;;AAOA,MAAMG,eAAe,GAAG,MAAM;AAC1B,MAAIC,GAAG,GAAGL,MAAM,EAAhB;AAEA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,EAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,MAAM,GAAGH,GAAG,CAACI,OAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,MAArB;AACAD,IAAAA,MAAM,CAACC,MAAD,CAAN,CAHY,CAIZ;AACH,GALQ,CAAT,CAL0B,CAY9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAII,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,KAApB;AAA0B,IAAA,MAAM,EAAC,KAAjC;AAAuC,IAAA,GAAG,EAAEH,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH,CA1ED;;AA4EA,eAAeD,eAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled('div')`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n`;\n\nconst CircleCanvas = styled('canvas')`\n    margin: 0 auto;\n    // height: 100%;\n`;\n\n\n\nconst CircleContainer = () => {\n    let ref = useRef();\n\n    const [ctx, setCtx] = useState()\n    \n    useEffect(() => {\n        let getCtx = ref.current;\n        console.log('HELLO', getCtx);\n        setCtx(getCtx);\n        // initPage();\n    })\n    \n//     let radius = 150;\n//     let center_x = ref.current.getContext(\"2d\").width / 2;\n//     let center_y = ctx.height / 2;\n//     const animationLooper = (analyser, freqArr) => {\n//             let bars = 200;\n//             // ctx.imageSmoothingEnabled = false;\n//             console.log('HELLO', ctx && ctx);\n//             ctx && ctx.beginPath();\n//             ctx && ctx.arc(center_x,center_y,radius,0,2*Math.PI);\n//             ctx && ctx.stroke();\n    \n//             analyser.getByteFrequencyData(freqArr);\n    \n//             for(let i=0; i < bars; i++) {\n//                 let rads = Math.PI * 2 / bars;\n//                 let bar_height = 100;\n//                 let bar_width = 2;\n//                 let x = center_x + Math.cos(rads * i) * (radius);\n//                 let y = center_y + Math.sin(rads * i) * (radius);\n//                 let x_end = center_x + Math.cos(rads * i)*(radius + bar_height);\n//                 let y_end = center_y + Math.sin(rads * i)*(radius + bar_height);\n//                 drawBar(x, y, x_end, y_end, bar_width, freqArr[i], ctx && ctx);\n//             }\n//             window.requestAnimationFrame(animationLooper);\n        \n//     }\n    \n//     const drawBar = (x1, y1, x2, y2, width,frequency, ctx) => {\n//         console.log(ctx);\n//         let lineColor = \"rgb(\" + frequency + \", \" + frequency + \", \" + 205 + \")\";\n//         ctx.strokeStyle = lineColor;\n//         ctx.lineWidth = width;\n//         ctx.beginPath();\n//         ctx.moveTo(x1,y1);\n//         ctx.lineTo(x2,y2);\n//         ctx.stroke();\n//     }\n//     const initPage = () => {\n//         let audio = new Audio();\n//         let context = new (window.AudioContext || window.webkitAudioContext)();\n//         let analyser = context.createAnalyser();\n//         let freqArr = new Uint8Array(analyser.frequencyBitCount);\n//         audio.src = \"/it_came_from_china.mp3\";\n//         let source = context.createMediaElementSource(audio);\n//         source.connect(analyser);\n//         analyser.connect(context.destination);\n//         audio.play();\n//         animationLooper(analyser, freqArr);\n// }\n    \n\n    \n    return (\n        <Wrapper>\n            <CircleCanvas width=\"600\" height=\"600\" ref={ref}>\n                {/* <Circle />\n                <Bar /> */}\n                {/* {ctx && drawCircle()} */}\n                {/* {ctx && drawBars()} */}\n            </CircleCanvas>\n        </Wrapper>\n    )\n}\n\nexport default CircleContainer;"]},"metadata":{},"sourceType":"module"}