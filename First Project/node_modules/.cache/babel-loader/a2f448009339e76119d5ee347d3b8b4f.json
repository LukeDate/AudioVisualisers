{"ast":null,"code":"var _jsxFileName = \"/Users/admin/audio-visual/audio-visualizer/src/components/audiobars.js\";\nimport React, { useState } from 'react';\nimport VisualDemo from './visualdemo';\nimport soundFile from '../music/it_comes_from_china.ogg';\n\nconst AudioDataContainer = () => {\n  let frequencyBandArray = [...Array(25).keys()];\n  const [audioData, setAudioData] = useState();\n\n  const initializeAudioAnalyser = () => {\n    const audioFile = new Audio();\n    const audioContext = new AudioContext();\n    const source = audioContext.createMediaElementSource(audioFile);\n    const analyser = audioContext.createAnalyser();\n    audioFile.src = soundFile;\n    analyser.fftSize = 64;\n    source.connect(audioContext.destination);\n    source.connect(analyser);\n    audioFile.play();\n    setAudioData(analyser);\n  };\n\n  const getFrequencyData = (styleAdjuster, data) => {\n    console.log('here', data);\n    const bufferLength = audioData.frequencyBinCount;\n    const amplitudeArray = new Uint8Array(bufferLength);\n    data.getByteFrequencyData(amplitudeArray);\n    styleAdjuster(amplitudeArray);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, console.log('state', audioData), /*#__PURE__*/React.createElement(VisualDemo, {\n    initializeAudioAnalyser: initializeAudioAnalyser,\n    frequencyBandArray: frequencyBandArray,\n    getFrequencyData: getFrequencyData({\n      data: audioData\n    }),\n    audioData: audioData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default AudioDataContainer;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/audiobars.js"],"names":["React","useState","VisualDemo","soundFile","AudioDataContainer","frequencyBandArray","Array","keys","audioData","setAudioData","initializeAudioAnalyser","audioFile","Audio","audioContext","AudioContext","source","createMediaElementSource","analyser","createAnalyser","src","fftSize","connect","destination","play","getFrequencyData","styleAdjuster","data","console","log","bufferLength","frequencyBinCount","amplitudeArray","Uint8Array","getByteFrequencyData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAE7B,MAAIC,kBAAkB,GAAG,CAAC,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAJ,CAAzB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;;AAEA,QAAMS,uBAAuB,GAAG,MAAM;AAClC,UAAMC,SAAS,GAAG,IAAIC,KAAJ,EAAlB;AACA,UAAMC,YAAY,GAAG,IAAIC,YAAJ,EAArB;AACA,UAAMC,MAAM,GAAGF,YAAY,CAACG,wBAAb,CAAsCL,SAAtC,CAAf;AACA,UAAMM,QAAQ,GAAGJ,YAAY,CAACK,cAAb,EAAjB;AACAP,IAAAA,SAAS,CAACQ,GAAV,GAAgBhB,SAAhB;AACAc,IAAAA,QAAQ,CAACG,OAAT,GAAmB,EAAnB;AACAL,IAAAA,MAAM,CAACM,OAAP,CAAeR,YAAY,CAACS,WAA5B;AACAP,IAAAA,MAAM,CAACM,OAAP,CAAeJ,QAAf;AACAN,IAAAA,SAAS,CAACY,IAAV;AACAd,IAAAA,YAAY,CAACQ,QAAD,CAAZ;AACH,GAXD;;AAaA,QAAMO,gBAAgB,GAAG,CAACC,aAAD,EAAeC,IAAf,KAAwB;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,UAAMG,YAAY,GAAGrB,SAAS,CAACsB,iBAA/B;AACA,UAAMC,cAAc,GAAG,IAAIC,UAAJ,CAAeH,YAAf,CAAvB;AACAH,IAAAA,IAAI,CAACO,oBAAL,CAA0BF,cAA1B;AACAN,IAAAA,aAAa,CAACM,cAAD,CAAb;AACH,GAND;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBpB,SAArB,CADL,eAEA,oBAAC,UAAD;AACI,IAAA,uBAAuB,EAAEE,uBAD7B;AAEI,IAAA,kBAAkB,EAAEL,kBAFxB;AAGI,IAAA,gBAAgB,EAAEmB,gBAAgB,CAAC;AAACE,MAAAA,IAAI,EAAElB;AAAP,KAAD,CAHtC;AAII,IAAA,SAAS,EAAEA,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ;AAWH,CApCD;;AAsCA,eAAeJ,kBAAf","sourcesContent":["import React, { useState } from 'react';\nimport VisualDemo from './visualdemo';\nimport soundFile from '../music/it_comes_from_china.ogg';\n\nconst AudioDataContainer = () => {\n\n    let frequencyBandArray = [...Array(25).keys()];\n    const [audioData, setAudioData] = useState();\n\n    const initializeAudioAnalyser = () => {\n        const audioFile = new Audio();\n        const audioContext = new AudioContext();\n        const source = audioContext.createMediaElementSource(audioFile);\n        const analyser = audioContext.createAnalyser();\n        audioFile.src = soundFile;\n        analyser.fftSize = 64;\n        source.connect(audioContext.destination);\n        source.connect(analyser);\n        audioFile.play();\n        setAudioData(analyser);\n    }\n\n    const getFrequencyData = (styleAdjuster,data) => {\n        console.log('here', data);\n        const bufferLength = audioData.frequencyBinCount;\n        const amplitudeArray = new Uint8Array(bufferLength);\n        data.getByteFrequencyData(amplitudeArray);\n        styleAdjuster(amplitudeArray);\n    }\n    return (\n        <div>\n            {console.log('state', audioData)}\n        <VisualDemo\n            initializeAudioAnalyser={initializeAudioAnalyser}\n            frequencyBandArray={frequencyBandArray}\n            getFrequencyData={getFrequencyData({data: audioData})}\n            audioData={audioData}\n        />\n        </div>\n    );\n}\n\nexport default AudioDataContainer;"]},"metadata":{},"sourceType":"module"}