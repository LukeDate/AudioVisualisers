{"ast":null,"code":"var _jsxFileName = \"/Users/admin/audio-visual/audio-visualizer/src/components/audiobars.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport VisualDemo from './visualdemo';\nimport soundFile from '../music/it_comes_from_china.ogg';\n\nconst AudioDataContainer = () => {\n  let context = new AudioContext();\n  let source = context.createMediaElementSource(soundFile);\n  let analyser = context.createAnalyser();\n  source.connect(analyser);\n  analyser.connect(context.destination);\n  analyser.fftSize = 256;\n  let bufferLength = analyser.frequencyBinCount;\n  let dataArray = new Uint8Array(bufferLength);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, console.log(), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => source.play(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Play Audio\"), /*#__PURE__*/React.createElement(VisualDemo, {\n    analyser: analyser,\n    dataArray: dataArray,\n    bufferLength: bufferLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default AudioDataContainer;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/audiobars.js"],"names":["React","useState","useEffect","useRef","VisualDemo","soundFile","AudioDataContainer","context","AudioContext","source","createMediaElementSource","analyser","createAnalyser","connect","destination","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","console","log","play"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC7B,MAAIC,OAAO,GAAG,IAAIC,YAAJ,EAAd;AACA,MAAIC,MAAM,GAAGF,OAAO,CAACG,wBAAR,CAAiCL,SAAjC,CAAb;AACA,MAAIM,QAAQ,GAAGJ,OAAO,CAACK,cAAR,EAAf;AACAH,EAAAA,MAAM,CAACI,OAAP,CAAeF,QAAf;AACAA,EAAAA,QAAQ,CAACE,OAAT,CAAiBN,OAAO,CAACO,WAAzB;AACAH,EAAAA,QAAQ,CAACI,OAAT,GAAmB,GAAnB;AAEA,MAAIC,YAAY,GAAGL,QAAQ,CAACM,iBAA5B;AACA,MAAIC,SAAS,GAAG,IAAIC,UAAJ,CAAeH,YAAf,CAAhB;AAEA,sBACI,0CACCI,OAAO,CAACC,GAAR,EADD,eAEA;AAAQ,IAAA,OAAO,EAAE,MAAMZ,MAAM,CAACa,IAAP,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA,oBAAC,UAAD;AAAa,IAAA,QAAQ,EAAEX,QAAvB;AAAiC,IAAA,SAAS,EAAEO,SAA5C;AAAuD,IAAA,YAAY,EAAEF,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CADJ;AAOH,CAlBD;;AAmBA,eAAeV,kBAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport VisualDemo from './visualdemo';\nimport soundFile from '../music/it_comes_from_china.ogg';\n\nconst AudioDataContainer = () => {\n    let context = new AudioContext();\n    let source = context.createMediaElementSource(soundFile);\n    let analyser = context.createAnalyser();\n    source.connect(analyser);\n    analyser.connect(context.destination);\n    analyser.fftSize = 256;\n\n    let bufferLength = analyser.frequencyBinCount;\n    let dataArray = new Uint8Array(bufferLength);\n\n    return(\n        <>\n        {console.log()}\n        <button onClick={() => source.play()}>Play Audio</button>\n        <VisualDemo  analyser={analyser} dataArray={dataArray} bufferLength={bufferLength} />\n        </>\n    )\n}\nexport default AudioDataContainer;"]},"metadata":{},"sourceType":"module"}