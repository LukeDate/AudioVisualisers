{"ast":null,"code":"var _jsxFileName = \"/Users/admin/audio-visual/audio-visualizer/src/components/circle.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nconst CircleWrap = styled('canvas')`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n`;\nconst Circle = styled('div')`\n    width: 200px;\n    height: 200px;\n    border-radius: 50%;\n    border: 1px solid black;\n    background: white;\n    `;\nconst Bar = styled('div')`\n    height: 100px;\n    width: 0px;\n    border: 1px solid black;\n    `; // let ctx = c.getContext(\"2d\");\n// const drawCircle = () => {\n//     ctx.beginPath();\n//     ctx.arc(100, 100, 100, 0, 2 * Math.PI);\n//     ctx.stroke();\n// }\n// const drawBars = (angle,distance,label) => {\n//     var x = 100 + 100 * Math.cos(-angle*Math.PI/180) * distance;\n//     var y = 100 + 100 * Math.sin(-angle*Math.PI/180) * distance;\n//     ctx.beginPath();\n//     ctx.arc(x, y, 4, 0, 2 * Math.PI);\n//     ctx.fill();\n//     ctx.font = \"10px\";\n//     ctx.fillText(label,x + 10,y);\n// }\n\nconst CircleContainer = () => {\n  let ref = useRef();\n  let radius = 150;\n  let center_x = ref.current.width / 2;\n  let center_y = ref.current.height / 2;\n  var font_size = \"20px\";\n  useEffect(() => {\n    let getCtx = ref.current.getContext('2d');\n    console.log(getCtx);\n    setCtx(getCtx);\n  }, []);\n  const [ctx, setCtx] = useState('');\n  console.log(ref);\n\n  const drawCircle = () => {\n    ctx.beginPath();\n    ctx.arc(center_x, center_y, radius, 0, 2 * Math.PI);\n    ctx.stroke();\n  };\n\n  const drawBars = (angle, distance, label) => {\n    var x = 100 + 100 * Math.cos(-angle * Math.PI / 180) * distance;\n    var y = 100 + 100 * Math.sin(-angle * Math.PI / 180) * distance;\n    ctx.beginPath();\n    ctx.arc(x, y, 1, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.font = \"10px\";\n    ctx.fillText(label, x + 10, y);\n  };\n\n  return /*#__PURE__*/React.createElement(CircleWrap, {\n    id: \"my-canvas\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, ctx && drawCircle());\n};\n\nexport default CircleContainer;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/circle.js"],"names":["React","useEffect","useState","useRef","styled","CircleWrap","Circle","Bar","CircleContainer","ref","radius","center_x","current","width","center_y","height","font_size","getCtx","getContext","console","log","setCtx","ctx","drawCircle","beginPath","arc","Math","PI","stroke","drawBars","angle","distance","label","x","cos","y","sin","fill","font","fillText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAAC,QAAD,CAAW;;;;;CAApC;AAOA,MAAME,MAAM,GAAGF,MAAM,CAAC,KAAD,CAAQ;;;;;;KAA7B;AAQI,MAAMG,GAAG,GAAGH,MAAM,CAAC,KAAD,CAAQ;;;;KAA1B,C,CAOJ;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMI,eAAe,GAAG,MAAM;AAC1B,MAAIC,GAAG,GAAGN,MAAM,EAAhB;AACA,MAAIO,MAAM,GAAG,GAAb;AACA,MAAIC,QAAQ,GAAGF,GAAG,CAACG,OAAJ,CAAYC,KAAZ,GAAoB,CAAnC;AACA,MAAIC,QAAQ,GAAGL,GAAG,CAACG,OAAJ,CAAYG,MAAZ,GAAqB,CAApC;AAEA,MAAIC,SAAS,GAAG,MAAhB;AACAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,MAAM,GAAGR,GAAG,CAACG,OAAJ,CAAYM,UAAZ,CAAuB,IAAvB,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAI,IAAAA,MAAM,CAACJ,MAAD,CAAN;AACH,GAJQ,EAIN,EAJM,CAAT;AAKA,QAAM,CAACK,GAAD,EAAMD,MAAN,IAAgBnB,QAAQ,CAAC,EAAD,CAA9B;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;;AAEA,QAAMc,UAAU,GAAG,MAAM;AACrBD,IAAAA,GAAG,CAACE,SAAJ;AACAF,IAAAA,GAAG,CAACG,GAAJ,CAAQd,QAAR,EAAiBG,QAAjB,EAA0BJ,MAA1B,EAAiC,CAAjC,EAAmC,IAAEgB,IAAI,CAACC,EAA1C;AACAL,IAAAA,GAAG,CAACM,MAAJ;AACH,GAJD;;AAMA,QAAMC,QAAQ,GAAG,CAACC,KAAD,EAAOC,QAAP,EAAgBC,KAAhB,KAA0B;AACvC,QAAIC,CAAC,GAAG,MAAM,MAAMP,IAAI,CAACQ,GAAL,CAAS,CAACJ,KAAD,GAAOJ,IAAI,CAACC,EAAZ,GAAe,GAAxB,CAAN,GAAqCI,QAAnD;AACA,QAAII,CAAC,GAAG,MAAM,MAAMT,IAAI,CAACU,GAAL,CAAS,CAACN,KAAD,GAAOJ,IAAI,CAACC,EAAZ,GAAe,GAAxB,CAAN,GAAqCI,QAAnD;AAEAT,IAAAA,GAAG,CAACE,SAAJ;AACAF,IAAAA,GAAG,CAACG,GAAJ,CAAQQ,CAAR,EAAWE,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,IAAIT,IAAI,CAACC,EAA7B;AACAL,IAAAA,GAAG,CAACe,IAAJ;AAEAf,IAAAA,GAAG,CAACgB,IAAJ,GAAW,MAAX;AACAhB,IAAAA,GAAG,CAACiB,QAAJ,CAAaP,KAAb,EAAmBC,CAAC,GAAG,EAAvB,EAA0BE,CAA1B;AACH,GAVD;;AAWA,sBACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAE1B,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKa,GAAG,IAAIC,UAAU,EAHtB,CADJ;AAOH,CAvCD;;AAyCA,eAAef,eAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst CircleWrap = styled('canvas')`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n`;\n\nconst Circle = styled('div')`\n    width: 200px;\n    height: 200px;\n    border-radius: 50%;\n    border: 1px solid black;\n    background: white;\n    `;\n    \n    const Bar = styled('div')`\n    height: 100px;\n    width: 0px;\n    border: 1px solid black;\n    `;\n    \n\n// let ctx = c.getContext(\"2d\");\n\n// const drawCircle = () => {\n//     ctx.beginPath();\n//     ctx.arc(100, 100, 100, 0, 2 * Math.PI);\n//     ctx.stroke();\n// }\n\n// const drawBars = (angle,distance,label) => {\n//     var x = 100 + 100 * Math.cos(-angle*Math.PI/180) * distance;\n//     var y = 100 + 100 * Math.sin(-angle*Math.PI/180) * distance;\n\n//     ctx.beginPath();\n//     ctx.arc(x, y, 4, 0, 2 * Math.PI);\n//     ctx.fill();\n\n//     ctx.font = \"10px\";\n//     ctx.fillText(label,x + 10,y);\n// }\n\nconst CircleContainer = () => {\n    let ref = useRef();\n    let radius = 150;\n    let center_x = ref.current.width / 2;\n    let center_y = ref.current.height / 2;\n    \n    var font_size = \"20px\";\n    useEffect(() => {\n        let getCtx = ref.current.getContext('2d');\n        console.log(getCtx);\n        setCtx(getCtx);\n    }, [])\n    const [ctx, setCtx] = useState('')\n    console.log(ref)\n    \n    const drawCircle = () => {\n        ctx.beginPath();\n        ctx.arc(center_x,center_y,radius,0,2*Math.PI);\n        ctx.stroke();\n    }\n\n    const drawBars = (angle,distance,label) => {\n        var x = 100 + 100 * Math.cos(-angle*Math.PI/180) * distance;\n        var y = 100 + 100 * Math.sin(-angle*Math.PI/180) * distance;\n\n        ctx.beginPath();\n        ctx.arc(x, y, 1, 0, 2 * Math.PI);\n        ctx.fill();\n\n        ctx.font = \"10px\";\n        ctx.fillText(label,x + 10,y);\n    }\n    return (\n        <CircleWrap id=\"my-canvas\" ref={ref}>\n            {/* <Circle />\n            <Bar /> */}\n            {ctx && drawCircle()}\n        </CircleWrap>\n    )\n}\n\nexport default CircleContainer;"]},"metadata":{},"sourceType":"module"}