{"ast":null,"code":"var _jsxFileName = \"/Users/admin/audio-visual/audio-visualizer/src/components/circle.js\";\nimport React, { useEffect, useState, useRef, createContext } from 'react';\nimport styled from 'styled-components';\nconst Wrapper = styled('div')`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n`;\nconst CircleCanvas = styled('canvas')`\n    margin: 0 auto;\n    // height: 100%;\n`;\n\nconst CircleContainer = () => {\n  let ref = useRef();\n  let audio = new Audio();\n  let context = new (window.AudioContext || window.webkitAudioContext)();\n  let analyser = context.createAnalyser();\n  let freqArr = new Uint8Array(analyser.frequencyBinCount);\n  audio.src = \"/it_came_from_china.mp3\";\n  let source = context.createMediaElementSource(audio);\n  const [ctx, setCtx] = useState();\n  const Context = createContext();\n  useEffect(() => {\n    let getCtx = ref.current;\n    setCtx(getCtx.getContext(\"2d\"));\n  });\n  let radius = 150;\n  let center_x = ctx && ctx.width / 2;\n  let center_y = ctx && ctx.height / 2;\n\n  const AnimationLooper = ctx => {\n    const ctxContext = useContext();\n    let bars = 200; // ctx.imageSmoothingEnabled = false;\n\n    ctx && ctx.beginPath();\n    ctx.arc(center_x, center_y, radius, 0, 2 * Math.PI);\n    ctx.stroke();\n    console.log('Here', ctx);\n    analyser.getByteFrequencyData(freqArr); // for(let i=0; i < bars; i++) {\n    //     let rads = Math.PI * 2 / bars;\n    //     let bar_height = 100;\n    //     let bar_width = 2;\n    //     let x = center_x + Math.cos(rads * i) * (radius);\n    //     let y = center_y + Math.sin(rads * i) * (radius);\n    //     let x_end = center_x + Math.cos(rads * i)*(radius + bar_height);\n    //     let y_end = center_y + Math.sin(rads * i)*(radius + bar_height);\n    //     drawBar(x, y, x_end, y_end, bar_width, freqArr[i], ctx && ctx);\n    // }\n\n    window.requestAnimationFrame( /*#__PURE__*/React.createElement(AnimationLooper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 42\n      }\n    }));\n  };\n\n  const drawBar = (x1, y1, x2, y2, width, frequency, ctx) => {\n    console.log(ctx);\n    let lineColor = \"rgb(\" + frequency + \", \" + frequency + \", \" + 205 + \")\";\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = width;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n  };\n\n  const initPage = ctx => {\n    source.connect(analyser);\n    analyser.connect(context.destination); // audio.play();\n\n    console.log('init');\n\n    /*#__PURE__*/\n    React.createElement(AnimationLooper, {\n      ctx: ctx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Context.CircleCanvas, {\n    value: ctx,\n    width: \"600\",\n    height: \"600\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, ctx && initPage(ctx)));\n};\n\nexport default CircleContainer;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/circle.js"],"names":["React","useEffect","useState","useRef","createContext","styled","Wrapper","CircleCanvas","CircleContainer","ref","audio","Audio","context","window","AudioContext","webkitAudioContext","analyser","createAnalyser","freqArr","Uint8Array","frequencyBinCount","src","source","createMediaElementSource","ctx","setCtx","Context","getCtx","current","getContext","radius","center_x","width","center_y","height","AnimationLooper","ctxContext","useContext","bars","beginPath","arc","Math","PI","stroke","console","log","getByteFrequencyData","requestAnimationFrame","drawBar","x1","y1","x2","y2","frequency","lineColor","strokeStyle","lineWidth","moveTo","lineTo","initPage","connect","destination"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,aAA7C,QAAkE,OAAlE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAAC,KAAD,CAAQ;;;;;CAA9B;AAOA,MAAME,YAAY,GAAGF,MAAM,CAAC,QAAD,CAAW;;;CAAtC;;AAOA,MAAMG,eAAe,GAAG,MAAM;AAC1B,MAAIC,GAAG,GAAGN,MAAM,EAAhB;AACA,MAAIO,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AACA,MAAIC,OAAO,GAAG,KAAKC,MAAM,CAACC,YAAP,IAAuBD,MAAM,CAACE,kBAAnC,GAAd;AACA,MAAIC,QAAQ,GAAGJ,OAAO,CAACK,cAAR,EAAf;AACA,MAAIC,OAAO,GAAG,IAAIC,UAAJ,CAAeH,QAAQ,CAACI,iBAAxB,CAAd;AACAV,EAAAA,KAAK,CAACW,GAAN,GAAY,yBAAZ;AACA,MAAIC,MAAM,GAAGV,OAAO,CAACW,wBAAR,CAAiCb,KAAjC,CAAb;AAEA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBvB,QAAQ,EAA9B;AACA,QAAMwB,OAAO,GAAGtB,aAAa,EAA7B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI0B,MAAM,GAAGlB,GAAG,CAACmB,OAAjB;AACAH,IAAAA,MAAM,CAACE,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAD,CAAN;AACH,GAHQ,CAAT;AAKA,MAAIC,MAAM,GAAG,GAAb;AACA,MAAIC,QAAQ,GAAGP,GAAG,IAAIA,GAAG,CAACQ,KAAJ,GAAY,CAAlC;AACA,MAAIC,QAAQ,GAAGT,GAAG,IAAIA,GAAG,CAACU,MAAJ,GAAa,CAAnC;;AAEA,QAAMC,eAAe,GAAIX,GAAD,IAAS;AACzB,UAAMY,UAAU,GAAGC,UAAU,EAA7B;AACA,QAAIC,IAAI,GAAG,GAAX,CAFyB,CAGzB;;AACAd,IAAAA,GAAG,IAAIA,GAAG,CAACe,SAAJ,EAAP;AACAf,IAAAA,GAAG,CAACgB,GAAJ,CAAQT,QAAR,EAAiBE,QAAjB,EAA0BH,MAA1B,EAAiC,CAAjC,EAAmC,IAAEW,IAAI,CAACC,EAA1C;AACAlB,IAAAA,GAAG,CAACmB,MAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBrB,GAApB;AACAR,IAAAA,QAAQ,CAAC8B,oBAAT,CAA8B5B,OAA9B,EARyB,CAUzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAL,IAAAA,MAAM,CAACkC,qBAAP,eAA6B,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B;AAEP,GAvBD;;AAyBA,QAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBpB,KAAjB,EAAuBqB,SAAvB,EAAkC7B,GAAlC,KAA0C;AACtDoB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAZ;AACA,QAAI8B,SAAS,GAAG,SAASD,SAAT,GAAqB,IAArB,GAA4BA,SAA5B,GAAwC,IAAxC,GAA+C,GAA/C,GAAqD,GAArE;AACA7B,IAAAA,GAAG,CAAC+B,WAAJ,GAAkBD,SAAlB;AACA9B,IAAAA,GAAG,CAACgC,SAAJ,GAAgBxB,KAAhB;AACAR,IAAAA,GAAG,CAACe,SAAJ;AACAf,IAAAA,GAAG,CAACiC,MAAJ,CAAWR,EAAX,EAAcC,EAAd;AACA1B,IAAAA,GAAG,CAACkC,MAAJ,CAAWP,EAAX,EAAcC,EAAd;AACA5B,IAAAA,GAAG,CAACmB,MAAJ;AACH,GATD;;AAUA,QAAMgB,QAAQ,GAAInC,GAAD,IAAS;AACtBF,IAAAA,MAAM,CAACsC,OAAP,CAAe5C,QAAf;AACAA,IAAAA,QAAQ,CAAC4C,OAAT,CAAiBhD,OAAO,CAACiD,WAAzB,EAFsB,CAGtB;;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA;AAAA,wBAAC,eAAD;AAAiB,MAAA,GAAG,EAAErB,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACP,GANG;;AAUA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD,CAAS,YAAT;AAAsB,IAAA,KAAK,EAAEA,GAA7B;AAAkC,IAAA,KAAK,EAAC,KAAxC;AAA8C,IAAA,MAAM,EAAC,KAArD;AAA2D,IAAA,GAAG,EAAEf,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKe,GAAG,IAAImC,QAAQ,CAACnC,GAAD,CADpB,CADJ,CADJ;AAYH,CA9ED;;AAgFA,eAAehB,eAAf","sourcesContent":["import React, { useEffect, useState, useRef, createContext } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled('div')`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n`;\n\nconst CircleCanvas = styled('canvas')`\n    margin: 0 auto;\n    // height: 100%;\n`;\n\n\n\nconst CircleContainer = () => {\n    let ref = useRef();\n    let audio = new Audio();\n    let context = new (window.AudioContext || window.webkitAudioContext)();\n    let analyser = context.createAnalyser();\n    let freqArr = new Uint8Array(analyser.frequencyBinCount);\n    audio.src = \"/it_came_from_china.mp3\";\n    let source = context.createMediaElementSource(audio);\n\n    const [ctx, setCtx] = useState()\n    const Context = createContext();\n    \n    useEffect(() => {\n        let getCtx = ref.current;\n        setCtx(getCtx.getContext(\"2d\"));\n    })\n\n    let radius = 150;\n    let center_x = ctx && ctx.width / 2;\n    let center_y = ctx && ctx.height / 2;\n\n    const AnimationLooper = (ctx) => {\n            const ctxContext = useContext()\n            let bars = 200;\n            // ctx.imageSmoothingEnabled = false;\n            ctx && ctx.beginPath();\n            ctx.arc(center_x,center_y,radius,0,2*Math.PI);\n            ctx.stroke();\n            console.log('Here', ctx);\n            analyser.getByteFrequencyData(freqArr);\n    \n            // for(let i=0; i < bars; i++) {\n            //     let rads = Math.PI * 2 / bars;\n            //     let bar_height = 100;\n            //     let bar_width = 2;\n            //     let x = center_x + Math.cos(rads * i) * (radius);\n            //     let y = center_y + Math.sin(rads * i) * (radius);\n            //     let x_end = center_x + Math.cos(rads * i)*(radius + bar_height);\n            //     let y_end = center_y + Math.sin(rads * i)*(radius + bar_height);\n            //     drawBar(x, y, x_end, y_end, bar_width, freqArr[i], ctx && ctx);\n            // }\n            \n            window.requestAnimationFrame(<AnimationLooper />);\n        \n    }\n    \n    const drawBar = (x1, y1, x2, y2, width,frequency, ctx) => {\n        console.log(ctx)\n        let lineColor = \"rgb(\" + frequency + \", \" + frequency + \", \" + 205 + \")\";\n        ctx.strokeStyle = lineColor;\n        ctx.lineWidth = width;\n        ctx.beginPath();\n        ctx.moveTo(x1,y1);\n        ctx.lineTo(x2,y2);\n        ctx.stroke();\n    }\n    const initPage = (ctx) => {\n        source.connect(analyser);\n        analyser.connect(context.destination);\n        // audio.play();\n        console.log('init');\n        <AnimationLooper ctx={ctx} />\n}\n    \n\n    \n    return (\n        <Wrapper>\n            <Context.CircleCanvas value={ctx} width=\"600\" height=\"600\" ref={ref}>\n                {ctx && initPage(ctx)}\n                {/* <Circle />\n                <Bar /> */}\n                {/* {ctx && drawCircle()} */}\n                {/* {ctx && drawBars()} */}\n                {/* {animationLooper()} */}\n            </Context.CircleCanvas>\n        </Wrapper>\n    )\n}\n\nexport default CircleContainer;"]},"metadata":{},"sourceType":"module"}