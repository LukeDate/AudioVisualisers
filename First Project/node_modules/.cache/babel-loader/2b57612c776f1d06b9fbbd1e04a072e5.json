{"ast":null,"code":"var _jsxFileName = \"/Users/admin/audio-visual/audio-visualizer/src/components/circle.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nconst Wrapper = styled('div')`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n`;\nconst CircleCanvas = styled('canvas')`\n    margin: 0 auto;\n    // height: 100%;\n`;\n\nconst initPage = () => {\n  let audio = new Audio();\n  let context = new (window.AudioContext || window.webkitAudioContext)();\n  let analyser = context.createAudioAnalyser();\n};\n\nconst CircleContainer = () => {\n  let ref = useRef();\n  let dpi = window.devicePixelRatio;\n  useEffect(() => {\n    let getCtx = ref.current;\n    console.log(getCtx);\n    setCtx(getCtx);\n  }, []);\n  const [ctx, setCtx] = useState('');\n  let radius = 150;\n  let center_x = ctx.width / 2;\n  let center_y = ctx.height / 2;\n\n  const drawCircle = () => {\n    // let gradient = ctx.getContext('2d').createLinearGradient(0,0,0,600);\n    // gradient.addColorStop(0,\"rgba(35, 7, 77, 1)\");\n    // gradient.addColorStop(1,\"rgba(204, 83, 51, 1)\");\n    // ctx.getContext('2d').fillStyle = gradient;\n    // ctx.getContext('2d').fillRect(0,0,600,600);\n    ctx.getContext('2d').imageSmoothingEnabled = false;\n    ctx.getContext('2d').beginPath();\n    ctx.getContext('2d').arc(center_x, center_y, radius, 0, 2 * Math.PI);\n    ctx.getContext('2d').stroke();\n  };\n\n  const drawBar = (x1, y1, x2, y2, width, frequency) => {\n    let lineColor = \"rgb(\" + frequency + \", \" + frequency + \", \" + 205 + \")\";\n    ctx.getContext('2d').strokeStyle = lineColor;\n    ctx.getContext('2d').lineWidth = width;\n    ctx.getContext('2d').beginPath();\n    ctx.getContext('2d').moveTo(x1, y1);\n    ctx.getContext('2d').lineTo(x2, y2);\n    ctx.getContext('2d').stroke();\n  };\n\n  const drawBars = () => {\n    let bars = 200;\n\n    for (let i = 0; i < bars; i++) {\n      let rads = Math.PI * 2 / bars;\n      let bar_height = 100;\n      let bar_width = 2;\n      let x = center_x + Math.cos(rads * i) * radius;\n      let y = center_y + Math.sin(rads * i) * radius;\n      let x_end = center_x + Math.cos(rads * i) * (radius + bar_height);\n      let y_end = center_y + Math.sin(rads * i) * (radius + bar_height);\n      drawBar(x, y, x_end, y_end, bar_width);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircleCanvas, {\n    width: \"600\",\n    height: \"600\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, ctx && drawCircle(), ctx && drawBars()));\n};\n\nexport default CircleContainer;","map":{"version":3,"sources":["/Users/admin/audio-visual/audio-visualizer/src/components/circle.js"],"names":["React","useEffect","useState","useRef","styled","Wrapper","CircleCanvas","initPage","audio","Audio","context","window","AudioContext","webkitAudioContext","analyser","createAudioAnalyser","CircleContainer","ref","dpi","devicePixelRatio","getCtx","current","console","log","setCtx","ctx","radius","center_x","width","center_y","height","drawCircle","getContext","imageSmoothingEnabled","beginPath","arc","Math","PI","stroke","drawBar","x1","y1","x2","y2","frequency","lineColor","strokeStyle","lineWidth","moveTo","lineTo","drawBars","bars","i","rads","bar_height","bar_width","x","cos","y","sin","x_end","y_end"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled('div')`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n`;\n\nconst CircleCanvas = styled('canvas')`\n    margin: 0 auto;\n    // height: 100%;\n`;\n\nconst initPage = () => {\n    let audio = new Audio();\n    let context = new (window.AudioContext || window.webkitAudioContext);\n    let analyser = context.createAudioAnalyser();\n}\n\nconst CircleContainer = () => {\n    let ref = useRef();\n    let dpi = window.devicePixelRatio;\n    useEffect(() => {\n        let getCtx = ref.current;\n        console.log(getCtx);\n        setCtx(getCtx);\n    }, [])\n    const [ctx, setCtx] = useState('')\n    \n    let radius = 150;\n    let center_x = ctx.width / 2;\n    let center_y = ctx.height / 2;\n        \n    const drawCircle = () => {\n        // let gradient = ctx.getContext('2d').createLinearGradient(0,0,0,600);\n        // gradient.addColorStop(0,\"rgba(35, 7, 77, 1)\");\n        // gradient.addColorStop(1,\"rgba(204, 83, 51, 1)\");\n        // ctx.getContext('2d').fillStyle = gradient;\n        // ctx.getContext('2d').fillRect(0,0,600,600);\n        ctx.getContext('2d').imageSmoothingEnabled = false;\n        ctx.getContext('2d').beginPath();\n        ctx.getContext('2d').arc(center_x,center_y,radius,0,2*Math.PI);\n        ctx.getContext('2d').stroke();\n    }\n\n    const drawBar = (x1, y1, x2, y2, width,frequency) => {\n    \n        let lineColor = \"rgb(\" + frequency + \", \" + frequency + \", \" + 205 + \")\";\n        \n        ctx.getContext('2d').strokeStyle = lineColor;\n        ctx.getContext('2d').lineWidth = width;\n        ctx.getContext('2d').beginPath();\n        ctx.getContext('2d').moveTo(x1,y1);\n        ctx.getContext('2d').lineTo(x2,y2);\n        ctx.getContext('2d').stroke();\n    }\n\n    const drawBars = () => {\n        let bars = 200;\n        for(let i=0; i < bars; i++) {\n            let rads = Math.PI * 2 / bars;\n            let bar_height = 100;\n            let bar_width = 2;\n            let x = center_x + Math.cos(rads * i) * (radius);\n\t        let y = center_y + Math.sin(rads * i) * (radius);\n            let x_end = center_x + Math.cos(rads * i)*(radius + bar_height);\n            let y_end = center_y + Math.sin(rads * i)*(radius + bar_height);\n\n            drawBar(x, y, x_end, y_end, bar_width);\n        }\n    }\n    \n    return (\n        <Wrapper>\n            <CircleCanvas width=\"600\" height=\"600\" ref={ref}>\n                {/* <Circle />\n                <Bar /> */}\n                {ctx && drawCircle()}\n                {ctx && drawBars()}\n            </CircleCanvas>\n        </Wrapper>\n    )\n}\n\nexport default CircleContainer;"]},"metadata":{},"sourceType":"module"}